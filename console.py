import fnmatch

print('Консольный файловый менеджер: ')
import os
import shutil
import sys
from famous_persons import get_person_and_question

while True:
    print('1. создать папку')
    print('2. удалить файл/папку')
    print('3. копировать файл/папку')
    print('4. просмотр содержимого рабочей директории')
    print('5. посмотреть только папки')
    print('6. посмотреть только файлы')
    print('7. просмотр информации об операционной системе')
    print('8. создатель программы')
    print('9. играть в викторину')
    print('10. мой банковский счет')
    print('11. выход')

    choice = input('Выберите пункт меню: ')
    if choice == '1':
        name_folder = input('Введите название папки: ')
        # проверка на существование
        if not os.path.exists(name_folder):
            os.mkdir(name_folder)
            print(f'Папка {name_folder} создана')
        else:
            print(f'Папка с именем {name_folder} уже существует')

    elif choice == '2':
        delete_folder = input('Введите название файла/папки, который(ую) необходимо удалить:  ')
        os.rmdir(delete_folder)
        print(f'Папка {delete_folder} удалена')

    elif choice == '3':
        copy_folder = input('Введите название файла/папки, который(ую) необходимо копировать:  ')
        new_folder = input('Введите новое название файла/папки:  ')
        shutil.copy(copy_folder, new_folder)

    elif choice == '4':
        print('Текущая директория: ', os.getcwd())

    elif choice == '5': # посмотреть папки
        dirs_view = [d for d in os.listdir('.') if os.path.isdir(d)]
        print(dirs_view)

    elif choice == '6': # посмотреть файлы
        files_view = [f for f in os.listdir('.') if os.path.isfile(f)]
        print(files_view)

        # list_of_files = os.listdir('.')
        # pattern = '*.py'
        # for i in list_of_files:
        #     if fnmatch.fnmatch(i, pattern):
        #         print(i)

    elif choice == '7':
        print('My OS is', sys.platform, '(', os.name, ')')
    elif choice == '8':
        print('Туз Любовь')
    elif choice == '9':
        rounds = int(input('Сколько раз вы хотите играть?'))

        for i in range(rounds):
            get_person_and_question()

        print('Пока!')
    elif choice == '10':
        import shop

    elif choice == '11':
        break
    else:
        print('Неверный пункт меню')


"""
1. Создать новый проект ""Консольный файловый менеджер"
2. В проекте реализовать следующий функционал:
После запуска программы пользователь видит меню, состоящее из следующих пунктов:
- создать папку;
- удалить (файл/папку);
- копировать (файл/папку);
- просмотр содержимого рабочей директории;
- посмотреть только папки;
- посмотреть только файлы;
- просмотр информации об операционной системе;
- создатель программы;
- играть в викторину;
- мой банковский счет;
- смена рабочей директории (*необязательный пункт);
- выход.
Так же можно добавить любой дополнительный функционал по желанию.
 
Описание пунктов:
- создать папку
после выбора пользователь вводит название папки, создаем её в рабочей директории;
- удалить (файл/папку)
после выбора пользователь вводит название папки или файла, удаляем из рабочей директории если такой есть;
- копировать (файл/папку)
после выбора пользователь вводит название папки/файла и новое название папки/файла. Копируем;
- просмотр содержимого рабочей директории
вывод всех объектов в рабочей папке;
- посмотреть только папки
вывод только папок которые находятся в рабочей папке;
- посмотреть только файлы
вывод только файлов которые находятся в рабочей папке;
- просмотр информации об операционной системе
вывести информацию об операционной системе (можно использовать пример из 1-го урока);
- создатель программы
вывод информации о создателе программы;
- играть в викторину
запуск игры викторина из предыдущего дз;
- мой банковский счет
запуск программы для работы с банковским счетом из предыдущего дз (задание учебное, после выхода из программы управлением счетом в главной программе сумму и историю покупок можно не запоминать);
- смена рабочей директории (*необязательный пункт)
усложненное задание пользователь вводит полный /home/user/... или относительный user/my/... путь. Меняем рабочую директорию на ту что ввели и работаем уже в ней;
- выход
выход из программы.
Так же можно добавить любой другой интересный или полезный функционал по своему желанию
После выполнения какого либо из пунктов снова возвращаемся в меню, пока пользователь не выберет выход
"""

